---
name: Plugin-compiler build

on:
  pull_request:
  push:
    tags:
      - 'v*'

env:
  GOLANG_CROSS: 1.19-bullseye

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
              
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set tag
        id: set-tag
        shell: bash
        run: |
          echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        id: login-ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TEST_TOKEN }}

      - name: Set docker metadata
        id: set-metadata
        uses: docker/metadata-action@v4
        with:
          images: |
            asutoshjg/tyk-plugin-compiler,enable=${{ startsWith(github.ref, 'refs/tags') }}
            ghcr.io/tyklabs/tyk-plugin-compiler,enable=true
          labels: |
            org.opencontainers.image.title=tyk-plugin-compiler
            org.opencontainers.image.version=${{ steps.set-tag.outputs.tag  }}
            org.opencontainers.image.description=Plugin compiler for the Tyk API Gateway
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern={{raw}}
            type=raw,value=${{github.sha}},enable=${{ !startsWith(github.ref, 'refs/tags') }}

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ci/images/plugin-compiler/Dockerfile
          platforms: linux/amd64
          push: true
          labels: ${{ steps.set-metadata.outputs.labels }}
          tags: ${{ steps.set-metadata.outputs.tags }}
          build-args: |
            BASE-IMAGE=tykio/golang-cross:${{ env.GOLANG_CROSS }}
            GITHUB_SHA=${{ github.sha }}
            GITHUB_TAG=${{ steps.set-target.output.tag }}
